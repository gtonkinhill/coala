% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/feature_mutation.R
\name{feat_mutation}
\alias{feat_mutation}
\title{Creates a Mutation Feature}
\usage{
feat_mutation(rate, variance = 0, model = "IFS", base_frequencies,
  tstv_ratio, gtr_rates)
}
\arguments{
\item{rate}{A \code{\link{Parameter}} defining the mutation rate (see above).}

\item{variance}{Set to a value different from 0 to introduce variation in the
the parameter value for different loci. The
variation follows a gamma distribution with mean equal to
the value provided as \code{parameter}, and variance as given
here. Can also be set to a previously
created parameter, or an expression based on parameters.}

\item{model}{The mutation model you want to use. Can be IFS (default),
HKY, F84 or GTR.}

\item{tstv.ratio}{The ratio of transitions to transversions. The default is
0.5, which means that all amino acid substitutions are
equally likely. In this case, the HKY model is identical to
the Felsenstein 81 model.}

\item{base.frequencies}{The equilibrium frequencies of the four bases.
Must be a numeric vector of length four.
Order is A, C, G, T.}

\item{gtr.rates}{The rates for the amino acid substitutions. Must be a
numeric vector of length six. Order: A->C, A->G, A->T, C->G, C->T, G->T.}
}
\value{
The feature, which can be added to a model using `+`.
}
\description{
This functions adds the assumption to the model that neutral mutations
occur in the genomes at a constant rate. The rate is quantified through
a parameter usually named theta in population genetics. It equals 4*N0*mu,
where N0 is the effective diploid population size of population one at the
time of sampling and mu is the neutral mutation rate for an entire locus.
}
\examples{
# A model with a constant scaled mutation rate of 5:
dm <- coal_model(c(15,20), 100) + feat_mutation(par_const(5))

# A model with a mutation rate that can be estimated with Jaatha:
dm <- coal_model(c(15,20), 100) +
  feat_mutation(par_range('theta', 1, 20))

# A model with variable gamma distributed mutation rate
dm <- coal_model(c(15,20), 100) +
  feat_mutation(par_range('theta', 1, 20), variance=100)
}

