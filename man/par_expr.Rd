% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/parameter.R
\name{par_expr}
\alias{ModelParameters}
\alias{par_const}
\alias{par_expr}
\alias{par_named}
\alias{par_range}
\title{Define Model Parameters}
\usage{
par_expr(expr)

par_const(constant)

par_named(name)

par_range(name, lower, upper)
}
\arguments{
\item{expr}{An R expression.
This allows to define a parameter using an R expression.
It can contain other named parameters (e.g. \code{2 * a} will create an
parameter that is twice the value of an existing parameter \code{a}).
Make sure that the expression always evaluates
to a valid parameter value (a single numeric in almost all cases).}

\item{constant}{An R expression.
The constant value of the parameter.
Different to \code{expr}, the expression is evaluated immediately and
can not depend on other named parameters.}

\item{name}{Character. The name of the parameter. Must be unique in a model.}

\item{lower}{A numeric. The lower boundary of the parameter's range.}

\item{upper}{A numeric. The upper boundary of the parameter's range.}
}
\description{
bla bla bla
}
\section{Functions}{
\itemize{
\item \code{par_expr}: Creates a parameter with value determined by evaluating an
expression.

\item \code{par_const}: Creates an parameter that is equal to a fixed value.
Different to par_expr, the value is evaluated on parameter creation.

\item \code{par_named}: Creates an parameter which's value is specified via the
\code{pars} argument in \code{\link{simulate.Coalmodel}}.

\item \code{par_range}: Creates an parameter that can take a range of possible
 values.
 Similar to \code{\link{par_named}}, the value of the parameter
 used in a simulation is set via the \code{pars} argument.
 This is primarily intended for creating model parameters for
 \pkg{jaatha}.
}}
\examples{
par_const(5)         # The parameters value is always 5.
par_expr(runif(1))   # Creates an parameter which takes a uniformly
                     # distributed value in each simulation.
par_range('x', 1, 5) # Creates an parameter with name x with possible values
                     # between 1 and 5.
par_expr(2*x)        # The parameters value is always equal two twice the
                     # value of a different model parameter named 'x'.
}
\author{
Paul Staab
}

